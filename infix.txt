//main2
package prac;
import java.util.Stack;
import java.util.Scanner;

public class Main2 {
    
    
    public static int precedence(char operator) {
        if (operator == '+' || operator == '-') {
            return 1;
        } else if (operator == '*' || operator == '/') {
            return 2;
        } else {
            return 0;
        }
    }

   
    public static String infixToPostfix(String expression) {
        Stack<Character> stack = new Stack<>();
        StringBuilder postfix = new StringBuilder();
        
        for (int i = 0; i < expression.length(); i++) {
            char currentChar = expression.charAt(i);
            
            
            if (currentChar == ' ') {
                continue;
            }
            
           
            if (Character.isLetterOrDigit(currentChar)) {
                postfix.append(currentChar);
            } 
            
            else if (currentChar == '(') {
                stack.push(currentChar);
            }
           
            else if (currentChar == ')') {
                while (!stack.isEmpty() && stack.peek() != '(') {
                    postfix.append(stack.pop());
                }
                stack.pop();  
            }
            
            else {
                while (!stack.isEmpty() && precedence(stack.peek()) >= precedence(currentChar)) {
                    postfix.append(stack.pop());
                }
                stack.push(currentChar);
            }
        }
        
        
        while (!stack.isEmpty()) {
            postfix.append(stack.pop());
        }
        
        return postfix.toString();
    }

    public static void main(String[] args) {
       
        Scanner scanner = new Scanner(System.in);
        
       
        System.out.print("Enter an infix expression: ");
        String infixExpression = scanner.nextLine();
        
        
        if (!infixExpression.matches("[a-zA-Z0-9+\\-*/^() ]+")) {
            System.out.println("Invalid characters in expression. Please use only letters, digits, and operators (+, -, *, /, ^, parentheses).");
            return;
        }
        
      
        String postfixExpression = infixToPostfix(infixExpression);
        
     
        System.out.println("Postfix Expression: " + postfixExpression);
        
        
        scanner.close();
    }
}
